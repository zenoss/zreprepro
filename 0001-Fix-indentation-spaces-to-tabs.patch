From 68f4559b66ec46fade3037c87a36ba4d4db700d4 Mon Sep 17 00:00:00 2001
From: Benjamin Drung <benjamin.drung@profitbricks.com>
Date: Fri, 30 May 2014 22:24:22 +0200
Subject: [PATCH 1/2] Fix indentation (spaces to tabs).

---
 main.c | 64 ++++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 32 insertions(+), 32 deletions(-)

diff --git a/main.c b/main.c
index 0496a97..37f1d3b 100644
--- a/main.c
+++ b/main.c
@@ -2513,54 +2513,54 @@ ACTION_F(y, n, y, y, reoverride) {
 /*****************retrieving Description data from .deb files***************/
 
 static retvalue repair_descriptions(struct target *target) {
-        struct target_cursor iterator;
-        retvalue result, r;
-        const char *package, *controlchunk;
+	struct target_cursor iterator;
+	retvalue result, r;
+	const char *package, *controlchunk;
 
-        assert(target->packages == NULL);
+	assert(target->packages == NULL);
 	assert(target->packagetype == pt_deb || target->packagetype == pt_udeb);
 
-        if (verbose > 2) {
-                printf(
+	if (verbose > 2) {
+		printf(
 "Redoing checksum information for packages in '%s'...\n",
-                                target->identifier);
-        }
+				target->identifier);
+	}
 
-        r = target_openiterator(target, READWRITE, &iterator);
-        if (!RET_IS_OK(r))
-                return r;
-        result = RET_NOTHING;
-        while (target_nextpackage(&iterator, &package, &controlchunk)) {
-                char *newcontrolchunk = NULL;
+	r = target_openiterator(target, READWRITE, &iterator);
+	if (!RET_IS_OK(r))
+		return r;
+	result = RET_NOTHING;
+	while (target_nextpackage(&iterator, &package, &controlchunk)) {
+		char *newcontrolchunk = NULL;
 
 		if (interrupted()) {
 			result = RET_ERROR_INTERRUPTED;
 			break;
 		}
 		/* replace it by itself to normalize the Description field */
-                r = description_addpackage(target, package, controlchunk,
+		r = description_addpackage(target, package, controlchunk,
 				controlchunk, NULL, &newcontrolchunk);
-                RET_UPDATE(result, r);
-                if (RET_WAS_ERROR(r))
-                        break;
-                if (RET_IS_OK(r)) {
+		RET_UPDATE(result, r);
+		if (RET_WAS_ERROR(r))
+			break;
+		if (RET_IS_OK(r)) {
 			if (verbose >= 0) {
 				printf(
 "Fixing description for '%s'...\n", package);
 			}
-                        r = cursor_replace(target->packages, iterator.cursor,
-                                newcontrolchunk, strlen(newcontrolchunk));
-                        free(newcontrolchunk);
-                        if (RET_WAS_ERROR(r)) {
-                                result = r;
-                                break;
-                        }
-                        target->wasmodified = true;
-                }
-        }
-        r = target_closeiterator(&iterator);
-        RET_ENDUPDATE(result, r);
-        return result;
+			r = cursor_replace(target->packages, iterator.cursor,
+				newcontrolchunk, strlen(newcontrolchunk));
+			free(newcontrolchunk);
+			if (RET_WAS_ERROR(r)) {
+				result = r;
+				break;
+			}
+			target->wasmodified = true;
+		}
+	}
+	r = target_closeiterator(&iterator);
+	RET_ENDUPDATE(result, r);
+	return result;
 }
 
 ACTION_F(y, n, y, y, repairdescriptions) {
-- 
1.9.1

